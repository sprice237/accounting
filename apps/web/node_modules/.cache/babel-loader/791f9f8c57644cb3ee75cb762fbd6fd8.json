{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Modal from '@mui/material/Modal';\nimport { CenterContent } from './CenterContent';\nexport const LoadingSpinner = () => _jsx(\"div\", {\n  style: {\n    display: 'inline-block'\n  },\n  className: \"loading\"\n}, void 0);\nexport const LoadingModal = () => {\n  return _jsx(Modal, Object.assign({\n    open: true\n  }, {\n    children: _jsx(_Fragment, {\n      children: _jsx(CenterContent, {\n        children: _jsx(LoadingSpinner, {}, void 0)\n      }, void 0)\n    }, void 0)\n  }), void 0);\n};\nexport const LoadingOverlay = _ref => {\n  let {\n    isLoading,\n    children\n  } = _ref;\n  return _jsxs(\"div\", Object.assign({\n    style: {\n      position: 'relative'\n    }\n  }, {\n    children: [_jsx(\"div\", Object.assign({\n      style: {\n        position: 'relative'\n      }\n    }, {\n      children: children\n    }), void 0), isLoading && _jsx(\"div\", Object.assign({\n      style: {\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        backgroundColor: 'rgba(255, 255, 255, 0.5)'\n      }\n    }, {\n      children: _jsx(LoadingSpinner, {}, void 0)\n    }), void 0)]\n  }), void 0);\n};","map":{"version":3,"sources":["/home/sprice/Code/accounting/.yarn/__virtual__/@sprice237-accounting-ui-virtual-93f7004ebc/1/packages/ui/dist/components/LoadingModal.js"],"names":["jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Modal","CenterContent","LoadingSpinner","style","display","className","LoadingModal","Object","assign","open","children","LoadingOverlay","isLoading","position","top","bottom","left","right","backgroundColor"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,EAAsBC,QAAQ,IAAIC,SAAlC,EAA6CC,IAAI,IAAIC,KAArD,QAAkE,mBAAlE;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOP,IAAI,CAAC,KAAD,EAAQ;AAAEQ,EAAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT;AAAsCC,EAAAA,SAAS,EAAE;AAAjD,CAAR,EAAsE,KAAK,CAA3E,CAAlC;AACP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAQX,IAAI,CAACK,KAAD,EAAQO,MAAM,CAACC,MAAP,CAAc;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAd,EAA8B;AAAEC,IAAAA,QAAQ,EAAEf,IAAI,CAACE,SAAD,EAAY;AAAEa,MAAAA,QAAQ,EAAEf,IAAI,CAACM,aAAD,EAAgB;AAAES,QAAAA,QAAQ,EAAEf,IAAI,CAACO,cAAD,EAAiB,EAAjB,EAAqB,KAAK,CAA1B;AAAhB,OAAhB,EAAgE,KAAK,CAArE;AAAhB,KAAZ,EAAuG,KAAK,CAA5G;AAAhB,GAA9B,CAAR,EAAyK,KAAK,CAA9K,CAAZ;AACH,CAFM;AAGP,OAAO,MAAMS,cAAc,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,SAAF;AAAaF,IAAAA;AAAb,GAA4B;AACvD,SAAQX,KAAK,CAAC,KAAD,EAAQQ,MAAM,CAACC,MAAP,CAAc;AAAEL,IAAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE;AAAZ;AAAT,GAAd,EAAmD;AAAEH,IAAAA,QAAQ,EAAE,CAACf,IAAI,CAAC,KAAD,EAAQY,MAAM,CAACC,MAAP,CAAc;AAAEL,MAAAA,KAAK,EAAE;AAAEU,QAAAA,QAAQ,EAAE;AAAZ;AAAT,KAAd,EAAmD;AAAEH,MAAAA,QAAQ,EAAEA;AAAZ,KAAnD,CAAR,EAAoF,KAAK,CAAzF,CAAL,EAAkGE,SAAS,IAAKjB,IAAI,CAAC,KAAD,EAAQY,MAAM,CAACC,MAAP,CAAc;AAAEL,MAAAA,KAAK,EAAE;AACvNU,QAAAA,QAAQ,EAAE,UAD6M;AAEvNC,QAAAA,GAAG,EAAE,GAFkN;AAGvNC,QAAAA,MAAM,EAAE,GAH+M;AAIvNC,QAAAA,IAAI,EAAE,GAJiN;AAKvNC,QAAAA,KAAK,EAAE,GALgN;AAMvNC,QAAAA,eAAe,EAAE;AANsM;AAAT,KAAd,EAO/L;AAAER,MAAAA,QAAQ,EAAEf,IAAI,CAACO,cAAD,EAAiB,EAAjB,EAAqB,KAAK,CAA1B;AAAhB,KAP+L,CAAR,EAOtI,KAAK,CAPiI,CAApH;AAAZ,GAAnD,CAAR,EAOmE,KAAK,CAPxE,CAAb;AAQH,CATM","sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Modal from '@mui/material/Modal';\nimport { CenterContent } from './CenterContent';\nexport const LoadingSpinner = () => (_jsx(\"div\", { style: { display: 'inline-block' }, className: \"loading\" }, void 0));\nexport const LoadingModal = () => {\n    return (_jsx(Modal, Object.assign({ open: true }, { children: _jsx(_Fragment, { children: _jsx(CenterContent, { children: _jsx(LoadingSpinner, {}, void 0) }, void 0) }, void 0) }), void 0));\n};\nexport const LoadingOverlay = ({ isLoading, children }) => {\n    return (_jsxs(\"div\", Object.assign({ style: { position: 'relative' } }, { children: [_jsx(\"div\", Object.assign({ style: { position: 'relative' } }, { children: children }), void 0), isLoading && (_jsx(\"div\", Object.assign({ style: {\n                    position: 'absolute',\n                    top: '0',\n                    bottom: '0',\n                    left: '0',\n                    right: '0',\n                    backgroundColor: 'rgba(255, 255, 255, 0.5)',\n                } }, { children: _jsx(LoadingSpinner, {}, void 0) }), void 0))] }), void 0));\n};\n"]},"metadata":{},"sourceType":"module"}