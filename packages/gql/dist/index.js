"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.simplifyQuery = exports.schemaLoader = void 0;
__exportStar(require("./__autogenerated__/types"), exports);
__exportStar(require("./GqlProvider"), exports);
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
const schemaLoader = () => __awaiter(void 0, void 0, void 0, function* () {
    return yield fs_1.promises.readFile(path_1.default.join(__dirname, '__autogenerated__', 'schema.graphql'), 'utf8');
});
exports.schemaLoader = schemaLoader;
const simplifyQuery = (method, field) => {
    return (variables) => {
        var _a;
        const queryResult = method({ variables });
        return [(_a = queryResult.data) === null || _a === void 0 ? void 0 : _a[field], queryResult];
    };
};
exports.simplifyQuery = simplifyQuery;
